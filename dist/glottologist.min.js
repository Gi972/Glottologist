class Glottologist{assign(a,b){let c={};c[a]=b,this.data=Object.assign(this.data,c)}async autoGen(a,b){let c={};for(let d of b){const b=await this.t(a,d);c[d]=b}this.assign(a,c)}constructor(){this.data={},this.lang=navigator.language||navigator.userLanguage}get(a,b='auto',c={}){let d={};'object'==typeof b&&(d=b,b='string'==typeof c?c:'auto');const e='auto'==b?this.data[a][new String(this.lang).split('-')[0]]:this.data[a][b];return eval('`'+e+'`')}import(a){return new Promise((b,c)=>{fetch(a).then((a)=>{a.json().then((a)=>{this.data=Object.assign(this.data,a),b(a)}).catch((a)=>{c(a)})}).catch((a)=>{c(a)})})}render(a,b='auto'){a=a instanceof NodeList?a:document.querySelectorAll(str),a.forEach((a)=>{a.innerHTML=this.get(a.innerHTML,b)})}t(a,b='en',c='auto'){return new Promise((d,f)=>{const e='https://translate.googleapis.com/translate_a/single?client=gtx&sl='+c+'&tl='+b+'&dt=t&q='+encodeURI(a);fetch(e).then((a)=>{a.json().then((a)=>{d(a[0][0][0])}).catch((a)=>{f(a)})}).catch((a)=>{f(a)})})}}'function'==typeof define&&define.amd?define(()=>new Glottologist):'undefined'==typeof exports?'undefined'!=typeof global&&(global.Glottologist=new Glottologist):('undefined'!=typeof module&&module.exports&&(exports=module.exports=new Glottologist),exports.Glottologist=new Glottologist);